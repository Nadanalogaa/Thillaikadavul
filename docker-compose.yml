version: '3.8'

services:
  # Local PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nadanaloga-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nadanaloga
      POSTGRES_USER: nadanaloga_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SecurePassword123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase_backup.sql:/docker-entrypoint-initdb.d/01-import.sql:ro
    networks:
      - nadanaloga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nadanaloga_user -d nadanaloga"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
        - CACHE_BUST=2025-09-26-local-postgres-migration
        - FORCE_REBUILD=true
        - LOCAL_POSTGRES_SETUP=enabled
    container_name: nadanaloga-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://nadanaloga_user:${POSTGRES_PASSWORD:-SecurePassword123!}@postgres:5432/nadanaloga
      SESSION_SECRET: ${SESSION_SECRET}
      
      # Supabase Configuration
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
      VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      
      # Email Configuration (SMTP)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL:-noreply@nadanaloga.com}
      
      # Client URL for CORS
      CLIENT_URL: ${CLIENT_URL:-}
    volumes:
      # Mount public assets (if needed for uploads)
      - app_uploads:/app/dist/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nadanaloga-network

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local

networks:
  nadanaloga-network:
    driver: bridge
    name: nadanaloga-network