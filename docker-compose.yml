version: '3.8'

services:
  # Local PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nadanaloga-${BRANCH_NAME:-main}-postgres
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=nadanaloga-critical"
      - "environment=production"
      - "protected=true"
    environment:
      POSTGRES_DB: nadanaloga
      POSTGRES_USER: nadanaloga_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SecurePassword123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Note: Backup import removed for Portainer Git deployment
      # Database will start empty - import data manually if needed
    networks:
      - nadanaloga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nadanaloga_user -d nadanaloga"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 40s
    # ports:
    #   - "${POSTGRES_PORT:-5432}:5432"  # Use different port per branch if needed

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
        - CACHE_BUST=2025-10-01-fix-vite-build-final
        - FORCE_REBUILD=true
        - LOCAL_POSTGRES_SETUP=enabled
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    container_name: nadanaloga-${BRANCH_NAME:-main}-app
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=nadanaloga-critical"
      - "environment=production"
      - "protected=true"
    ports:
      - "${APP_PORT:-3000}:3000"  # Use different port per branch
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://nadanaloga_user:${POSTGRES_PASSWORD:-SecurePassword123!}@postgres:5432/nadanaloga
      SESSION_SECRET: ${SESSION_SECRET}
      
      # Supabase Configuration
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
      VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      
      # Email Configuration (SMTP)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL:-noreply@nadanaloga.com}
      
      # Client URL for CORS
      CLIENT_URL: ${CLIENT_URL:-}
    volumes:
      # Mount public assets (if needed for uploads)
      - app_uploads:/app/dist/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nadanaloga-network

volumes:
  postgres_data:
    name: nadanaloga-${BRANCH_NAME:-main}-postgres-data
    driver: local
  app_uploads:
    name: nadanaloga-${BRANCH_NAME:-main}-uploads
    driver: local

networks:
  nadanaloga-network:
    name: nadanaloga-${BRANCH_NAME:-main}-network
    external: false